; generated by ARM C/C++ Compiler, 4.1 [Build 644]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\EXE\25lc640.o --asm_dir=.\ --list_dir=.\ --depend=.\EXE\25lc640.d --feedback=.\EXE\STEND.fed --cpu=Cortex-M3 --apcs=interwork -O1 -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\INC\NXP\LPC17xx -D__MICROLIB -DUKU_VD -DUKU_220_IPS_TERMOKOMPENSAT -DUKU2071x --omf_browse=.\EXE\25lc640.crf 25lc640.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  spi1 PROC
;;;9      
;;;10     char spi1(char in)
000000  49d5              LDR      r1,|L1.856|
;;;11     {
;;;12     
;;;13      
;;;14     
;;;15     LPC_SPI->SPDR=in;
000002  6088              STR      r0,[r1,#8]
                  |L1.4|
;;;16     while(!(LPC_SPI->SPSR&(1<<7)));
000004  6848              LDR      r0,[r1,#4]
000006  0600              LSLS     r0,r0,#24
000008  d5fc              BPL      |L1.4|
;;;17     return LPC_SPI->SPDR;
00000a  6888              LDR      r0,[r1,#8]
00000c  b2c0              UXTB     r0,r0
;;;18     
;;;19      
;;;20     
;;;21     }
00000e  4770              BX       lr
;;;22     
                          ENDP

                  spi1_config PROC
;;;26     //настройка SPI1
;;;27     void spi1_config(void)
000010  48d2              LDR      r0,|L1.860|
;;;28     { 
;;;29     
;;;30     SET_REG( LPC_PINCON->PINSEL0, 3, 15*2, 2);
000012  6801              LDR      r1,[r0,#0]
000014  f0414140          ORR      r1,r1,#0xc0000000
000018  6001              STR      r1,[r0,#0]
;;;31     SET_REG( LPC_PINCON->PINSEL1, 0, (16-16)*2, 2);
00001a  6841              LDR      r1,[r0,#4]
00001c  f0210103          BIC      r1,r1,#3
000020  6041              STR      r1,[r0,#4]
;;;32     SET_REG( LPC_PINCON->PINSEL1, 3, (17-16)*2, 2);
000022  6841              LDR      r1,[r0,#4]
000024  f041010c          ORR      r1,r1,#0xc
000028  6041              STR      r1,[r0,#4]
;;;33     SET_REG( LPC_PINCON->PINSEL1, 3, (18-16)*2, 2); 
00002a  6841              LDR      r1,[r0,#4]
00002c  f0410130          ORR      r1,r1,#0x30
000030  6041              STR      r1,[r0,#4]
;;;34     /*
;;;35     S1SPCCR=100;
;;;36     S1SPCR=0x3f; */
;;;37     
;;;38     LPC_SPI->SPCCR=8;
000032  48c9              LDR      r0,|L1.856|
000034  f04f0108          MOV      r1,#8
000038  60c1              STR      r1,[r0,#0xc]
;;;39     LPC_SPI->SPCR=0x20;
00003a  f04f0120          MOV      r1,#0x20
00003e  6001              STR      r1,[r0,#0]
;;;40     }
000040  4770              BX       lr
;;;41     
                          ENDP

                  spi1_unconfig PROC
;;;62     //выключение SPI1
;;;63     void spi1_unconfig(void)
000042  48c6              LDR      r0,|L1.860|
;;;64     { 
;;;65     
;;;66     SET_REG( LPC_PINCON->PINSEL0, 0, 15*2, 2);
000044  6801              LDR      r1,[r0,#0]
000046  f0214140          BIC      r1,r1,#0xc0000000
00004a  6001              STR      r1,[r0,#0]
;;;67     SET_REG( LPC_PINCON->PINSEL1, 0, (16-16)*2, 2);
00004c  6841              LDR      r1,[r0,#4]
00004e  f0210103          BIC      r1,r1,#3
000052  6041              STR      r1,[r0,#4]
;;;68     SET_REG( LPC_PINCON->PINSEL1, 0, (17-16)*2, 2);
000054  6841              LDR      r1,[r0,#4]
000056  f021010c          BIC      r1,r1,#0xc
00005a  6041              STR      r1,[r0,#4]
;;;69     SET_REG( LPC_PINCON->PINSEL1, 0, (18-16)*2, 2);
00005c  6841              LDR      r1,[r0,#4]
00005e  f0210130          BIC      r1,r1,#0x30
000062  6041              STR      r1,[r0,#4]
;;;70     
;;;71     LPC_SPI->SPCR=0x00;
000064  49bc              LDR      r1,|L1.856|
000066  f04f0000          MOV      r0,#0
00006a  6008              STR      r0,[r1,#0]
;;;72     }
00006c  4770              BX       lr
;;;73     
                          ENDP

                  lc640_wren PROC
;;;75     //Разрешение записи
;;;76     void lc640_wren(void)
00006e  b500              PUSH     {lr}
;;;77     {
;;;78     
;;;79     spi1_config();
000070  f7fffffe          BL       spi1_config
;;;80     
;;;81     CS_ON
000074  4aba              LDR      r2,|L1.864|
000076  6810              LDR      r0,[r2,#0]
000078  f4401080          ORR      r0,r0,#0x100000
00007c  6010              STR      r0,[r2,#0]
00007e  69d0              LDR      r0,[r2,#0x1c]
000080  f4401080          ORR      r0,r0,#0x100000
000084  61d0              STR      r0,[r2,#0x1c]
;;;82     
;;;83     spi1(0x06); 
000086  f04f0006          MOV      r0,#6
00008a  f7fffffe          BL       spi1
;;;84     
;;;85     CS_OFF
00008e  6810              LDR      r0,[r2,#0]
000090  f4401080          ORR      r0,r0,#0x100000
000094  6010              STR      r0,[r2,#0]
000096  6990              LDR      r0,[r2,#0x18]
000098  f4401080          ORR      r0,r0,#0x100000
00009c  6190              STR      r0,[r2,#0x18]
;;;86     
;;;87     spi1_unconfig();
00009e  f85deb04          POP      {lr}
0000a2  e7fe              B        spi1_unconfig
;;;88     }
;;;89     
                          ENDP

                  lc640_rdsr PROC
;;;91     //Чтение из м-мы регистра состояния
;;;92     char lc640_rdsr(void)
0000a4  b500              PUSH     {lr}
;;;93     {
;;;94     char temp;
;;;95     
;;;96     spi1_config();
0000a6  f7fffffe          BL       spi1_config
;;;97     CS_ON
0000aa  4aad              LDR      r2,|L1.864|
0000ac  6810              LDR      r0,[r2,#0]
0000ae  f4401080          ORR      r0,r0,#0x100000
0000b2  6010              STR      r0,[r2,#0]
0000b4  69d0              LDR      r0,[r2,#0x1c]
0000b6  f4401080          ORR      r0,r0,#0x100000
0000ba  61d0              STR      r0,[r2,#0x1c]
;;;98     spi1(0x05);
0000bc  f04f0005          MOV      r0,#5
0000c0  f7fffffe          BL       spi1
;;;99     temp=spi1(0xff);
0000c4  20ff              MOVS     r0,#0xff
0000c6  f7fffffe          BL       spi1
0000ca  4603              MOV      r3,r0
;;;100    CS_OFF
0000cc  6811              LDR      r1,[r2,#0]
0000ce  f4411180          ORR      r1,r1,#0x100000
0000d2  6011              STR      r1,[r2,#0]
0000d4  6991              LDR      r1,[r2,#0x18]
0000d6  f4411180          ORR      r1,r1,#0x100000
0000da  6191              STR      r1,[r2,#0x18]
;;;101    spi1_unconfig();
0000dc  f7fffffe          BL       spi1_unconfig
;;;102    return temp;
0000e0  4618              MOV      r0,r3
;;;103    }
0000e2  bd00              POP      {pc}
;;;104    
                          ENDP

                  lc640_read_int PROC
;;;137    //Чтение из м-мы слова по адр. ADR
;;;138    int lc640_read_int(int ADR)
0000e4  b501              PUSH     {r0,lr}
                  |L1.230|
;;;139    {
;;;140    char temp;
;;;141    int temp_i;
;;;142    
;;;143    
;;;144    //LPC_GPIO0->FIODIR|=0x00000002;
;;;145    //LPC_GPIO0->FIOSET|=0x00000002;
;;;146    
;;;147    
;;;148    
;;;149    while(lc640_rdsr()&0x01)
0000e6  f7fffffe          BL       lc640_rdsr
0000ea  07c0              LSLS     r0,r0,#31
0000ec  d1fb              BNE      |L1.230|
;;;150    	{
;;;151    	}
;;;152    
;;;153    //lc640_rdsr();
;;;154    //IO0DIR_bit.P0_11=1;
;;;155    //IO0SET_bit.P0_11=1;
;;;156    spi1_config();
0000ee  f7fffffe          BL       spi1_config
;;;157    CS_ON
0000f2  4a9b              LDR      r2,|L1.864|
0000f4  6810              LDR      r0,[r2,#0]
0000f6  f4401080          ORR      r0,r0,#0x100000
0000fa  6010              STR      r0,[r2,#0]
0000fc  69d0              LDR      r0,[r2,#0x1c]
0000fe  f4401080          ORR      r0,r0,#0x100000
000102  61d0              STR      r0,[r2,#0x1c]
;;;158    spi1(0x03);
000104  f04f0003          MOV      r0,#3
000108  f7fffffe          BL       spi1
;;;159    temp=*(((char*)&ADR)+1);
00010c  f89d0001          LDRB     r0,[sp,#1]
;;;160    spi1(temp);
000110  f7fffffe          BL       spi1
;;;161    temp=*((char*)&ADR);
000114  f89d0000          LDRB     r0,[sp,#0]
;;;162    spi1(temp);
000118  f7fffffe          BL       spi1
;;;163    temp=spi1(0xff);
00011c  20ff              MOVS     r0,#0xff
00011e  f7fffffe          BL       spi1
000122  4603              MOV      r3,r0
;;;164    temp_i=spi1(0xff);
000124  f04f00ff          MOV      r0,#0xff
000128  f7fffffe          BL       spi1
;;;165    temp_i<<=8;
00012c  ea4f2000          LSL      r0,r0,#8
;;;166    temp_i+=temp;
000130  4403              ADD      r3,r3,r0
;;;167    CS_OFF
000132  6810              LDR      r0,[r2,#0]
000134  f4401080          ORR      r0,r0,#0x100000
000138  6010              STR      r0,[r2,#0]
00013a  6990              LDR      r0,[r2,#0x18]
00013c  f4401080          ORR      r0,r0,#0x100000
000140  6190              STR      r0,[r2,#0x18]
;;;168    CS_OFF
000142  6810              LDR      r0,[r2,#0]
000144  f4401080          ORR      r0,r0,#0x100000
000148  6010              STR      r0,[r2,#0]
00014a  6990              LDR      r0,[r2,#0x18]
00014c  f4401080          ORR      r0,r0,#0x100000
000150  6190              STR      r0,[r2,#0x18]
;;;169    spi1_unconfig();
000152  f7fffffe          BL       spi1_unconfig
;;;170    
;;;171    //LPC_GPIO0->FIOCLR|=0x00000002;
;;;172    return temp_i;
000156  4618              MOV      r0,r3
;;;173    }
000158  bd08              POP      {r3,pc}
;;;174    
                          ENDP

                  lc640_read_long PROC
;;;176    //Чтение из м-мы 4 байт по адр. ADR
;;;177    long lc640_read_long(int ADR)
00015a  b531              PUSH     {r0,r4,r5,lr}
                  |L1.348|
;;;178    {
;;;179    char temp0,temp1,temp2;
;;;180    long temp_i;
;;;181    while(lc640_rdsr()&0x01)
00015c  f7fffffe          BL       lc640_rdsr
000160  07c0              LSLS     r0,r0,#31
000162  d1fb              BNE      |L1.348|
;;;182    	{
;;;183    	}
;;;184    spi1_config();
000164  f7fffffe          BL       spi1_config
;;;185    CS_ON
000168  4a7d              LDR      r2,|L1.864|
00016a  6810              LDR      r0,[r2,#0]
00016c  f4401080          ORR      r0,r0,#0x100000
000170  6010              STR      r0,[r2,#0]
000172  69d0              LDR      r0,[r2,#0x1c]
000174  f4401080          ORR      r0,r0,#0x100000
000178  61d0              STR      r0,[r2,#0x1c]
;;;186    spi1(0x03);
00017a  f04f0003          MOV      r0,#3
00017e  f7fffffe          BL       spi1
;;;187    temp0=*(((char*)&ADR)+1);
000182  f89d0001          LDRB     r0,[sp,#1]
;;;188    spi1(temp0);
000186  f7fffffe          BL       spi1
;;;189    temp0=*((char*)&ADR);
00018a  f89d0000          LDRB     r0,[sp,#0]
;;;190    spi1(temp0);
00018e  f7fffffe          BL       spi1
;;;191    temp0=spi1(0xff);
000192  20ff              MOVS     r0,#0xff
000194  f7fffffe          BL       spi1
000198  4603              MOV      r3,r0
;;;192    temp1=spi1(0xff);
00019a  f04f00ff          MOV      r0,#0xff
00019e  f7fffffe          BL       spi1
0001a2  4605              MOV      r5,r0
;;;193    temp2=spi1(0xff);
0001a4  f04f00ff          MOV      r0,#0xff
0001a8  f7fffffe          BL       spi1
0001ac  4604              MOV      r4,r0
;;;194    temp_i=spi1(0xff);
0001ae  f04f00ff          MOV      r0,#0xff
0001b2  f7fffffe          BL       spi1
;;;195    temp_i<<=8;
0001b6  ea4f2000          LSL      r0,r0,#8
;;;196    temp_i+=temp2;
0001ba  4420              ADD      r0,r0,r4
;;;197    temp_i<<=8;
0001bc  ea4f2100          LSL      r1,r0,#8
;;;198    temp_i+=temp1;
0001c0  eb010005          ADD      r0,r1,r5
;;;199    temp_i<<=8;
0001c4  ea4f2100          LSL      r1,r0,#8
;;;200    temp_i+=temp0;
0001c8  440b              ADD      r3,r3,r1
;;;201    CS_OFF
0001ca  6810              LDR      r0,[r2,#0]
0001cc  f4401080          ORR      r0,r0,#0x100000
0001d0  6010              STR      r0,[r2,#0]
0001d2  6990              LDR      r0,[r2,#0x18]
0001d4  f4401080          ORR      r0,r0,#0x100000
0001d8  6190              STR      r0,[r2,#0x18]
;;;202    CS_OFF
0001da  6810              LDR      r0,[r2,#0]
0001dc  f4401080          ORR      r0,r0,#0x100000
0001e0  6010              STR      r0,[r2,#0]
0001e2  6990              LDR      r0,[r2,#0x18]
0001e4  f4401080          ORR      r0,r0,#0x100000
0001e8  6190              STR      r0,[r2,#0x18]
;;;203    spi1_unconfig();
0001ea  f7fffffe          BL       spi1_unconfig
;;;204    return temp_i;
0001ee  4618              MOV      r0,r3
;;;205    }
0001f0  bd38              POP      {r3-r5,pc}
;;;206    
                          ENDP

                  lc640_read_long_ptr PROC
;;;208    //Чтение из м-мы 4 байт по адр. ADR
;;;209    void lc640_read_long_ptr(int ADR,char* out_ptr)
0001f2  b513              PUSH     {r0,r1,r4,lr}
;;;210    {
0001f4  460c              MOV      r4,r1
                  |L1.502|
;;;211    char temp0/*,temp1,temp2*/;
;;;212    //long temp_i;
;;;213    while(lc640_rdsr()&0x01)
0001f6  f7fffffe          BL       lc640_rdsr
0001fa  07c0              LSLS     r0,r0,#31
0001fc  d1fb              BNE      |L1.502|
;;;214    	{
;;;215    	}
;;;216    spi1_config();
0001fe  f7fffffe          BL       spi1_config
;;;217    CS_ON
000202  4a57              LDR      r2,|L1.864|
000204  6810              LDR      r0,[r2,#0]
000206  f4401080          ORR      r0,r0,#0x100000
00020a  6010              STR      r0,[r2,#0]
00020c  69d0              LDR      r0,[r2,#0x1c]
00020e  f4401080          ORR      r0,r0,#0x100000
000212  61d0              STR      r0,[r2,#0x1c]
;;;218    spi1(0x03);
000214  f04f0003          MOV      r0,#3
000218  f7fffffe          BL       spi1
;;;219    temp0=*(((char*)&ADR)+1);
00021c  f89d0001          LDRB     r0,[sp,#1]
;;;220    spi1(temp0);
000220  f7fffffe          BL       spi1
;;;221    temp0=*((char*)&ADR);
000224  f89d0000          LDRB     r0,[sp,#0]
;;;222    spi1(temp0);
000228  f7fffffe          BL       spi1
;;;223    out_ptr[0]=spi1(0xff);
00022c  20ff              MOVS     r0,#0xff
00022e  f7fffffe          BL       spi1
000232  7020              STRB     r0,[r4,#0]
;;;224    out_ptr[1]=spi1(0xff);
000234  20ff              MOVS     r0,#0xff
000236  f7fffffe          BL       spi1
00023a  7060              STRB     r0,[r4,#1]
;;;225    out_ptr[2]=spi1(0xff);
00023c  20ff              MOVS     r0,#0xff
00023e  f7fffffe          BL       spi1
000242  70a0              STRB     r0,[r4,#2]
;;;226    out_ptr[3]=spi1(0xff);
000244  20ff              MOVS     r0,#0xff
000246  f7fffffe          BL       spi1
00024a  70e0              STRB     r0,[r4,#3]
;;;227    CS_OFF
00024c  6810              LDR      r0,[r2,#0]
00024e  f4401080          ORR      r0,r0,#0x100000
000252  6010              STR      r0,[r2,#0]
000254  6990              LDR      r0,[r2,#0x18]
000256  f4401080          ORR      r0,r0,#0x100000
00025a  6190              STR      r0,[r2,#0x18]
;;;228    CS_OFF
00025c  6810              LDR      r0,[r2,#0]
00025e  f4401080          ORR      r0,r0,#0x100000
000262  6010              STR      r0,[r2,#0]
000264  6990              LDR      r0,[r2,#0x18]
000266  f4401080          ORR      r0,r0,#0x100000
00026a  6190              STR      r0,[r2,#0x18]
;;;229    spi1_unconfig();
00026c  e8bd401c          POP      {r2-r4,lr}
000270  e7fe              B        spi1_unconfig
;;;230    }
;;;231    
                          ENDP

                  lc640_write PROC
;;;258    //Запись байта in по адресу ADR
;;;259    char lc640_write(int ADR,char in)
000272  b513              PUSH     {r0,r1,r4,lr}
;;;260    {
000274  460c              MOV      r4,r1
                  |L1.630|
;;;261    char temp; 
;;;262    
;;;263    while(lc640_rdsr()&0x01)
000276  f7fffffe          BL       lc640_rdsr
00027a  07c0              LSLS     r0,r0,#31
00027c  d1fb              BNE      |L1.630|
;;;264    	{
;;;265    	}
;;;266    lc640_wren();
00027e  f7fffffe          BL       lc640_wren
;;;267    spi1_config();	
000282  f7fffffe          BL       spi1_config
;;;268    CS_ON
000286  4a36              LDR      r2,|L1.864|
000288  6810              LDR      r0,[r2,#0]
00028a  f4401080          ORR      r0,r0,#0x100000
00028e  6010              STR      r0,[r2,#0]
000290  69d0              LDR      r0,[r2,#0x1c]
000292  f4401080          ORR      r0,r0,#0x100000
000296  61d0              STR      r0,[r2,#0x1c]
;;;269    spi1(0x02);
000298  f04f0002          MOV      r0,#2
00029c  f7fffffe          BL       spi1
;;;270    temp=*(((char*)&ADR)+1);
0002a0  f89d0001          LDRB     r0,[sp,#1]
;;;271    spi1(temp);
0002a4  f7fffffe          BL       spi1
;;;272    temp=*((char*)&ADR);
0002a8  f89d0000          LDRB     r0,[sp,#0]
;;;273    spi1(temp);
0002ac  f7fffffe          BL       spi1
;;;274    temp=spi1(in);
0002b0  4620              MOV      r0,r4
0002b2  f7fffffe          BL       spi1
0002b6  4603              MOV      r3,r0
;;;275    CS_OFF
0002b8  6810              LDR      r0,[r2,#0]
0002ba  f4401080          ORR      r0,r0,#0x100000
0002be  6010              STR      r0,[r2,#0]
0002c0  6990              LDR      r0,[r2,#0x18]
0002c2  f4401080          ORR      r0,r0,#0x100000
0002c6  6190              STR      r0,[r2,#0x18]
;;;276    CS_OFF
0002c8  6810              LDR      r0,[r2,#0]
0002ca  f4401080          ORR      r0,r0,#0x100000
0002ce  6010              STR      r0,[r2,#0]
0002d0  6990              LDR      r0,[r2,#0x18]
0002d2  f4401080          ORR      r0,r0,#0x100000
0002d6  6190              STR      r0,[r2,#0x18]
;;;277    spi1_unconfig(); 
0002d8  f7fffffe          BL       spi1_unconfig
;;;278    return temp;
0002dc  4618              MOV      r0,r3
;;;279    }
0002de  bd1c              POP      {r2-r4,pc}
;;;280    
                          ENDP

                  lc640_write_int PROC
;;;282    //Запись слова in по адресу ADR
;;;283    char lc640_write_int(short ADR,short in)
0002e0  b503              PUSH     {r0,r1,lr}
                  |L1.738|
;;;284    {
;;;285    char temp; 
;;;286    while(lc640_rdsr()&0x01)
0002e2  f7fffffe          BL       lc640_rdsr
0002e6  07c0              LSLS     r0,r0,#31
0002e8  d1fb              BNE      |L1.738|
;;;287    	{
;;;288    	}
;;;289    lc640_wren();
0002ea  f7fffffe          BL       lc640_wren
;;;290    spi1_config();	
0002ee  f7fffffe          BL       spi1_config
;;;291    CS_ON
0002f2  4a1b              LDR      r2,|L1.864|
0002f4  6810              LDR      r0,[r2,#0]
0002f6  f4401080          ORR      r0,r0,#0x100000
0002fa  6010              STR      r0,[r2,#0]
0002fc  69d0              LDR      r0,[r2,#0x1c]
0002fe  f4401080          ORR      r0,r0,#0x100000
000302  61d0              STR      r0,[r2,#0x1c]
;;;292    spi1(0x02);
000304  f04f0002          MOV      r0,#2
000308  f7fffffe          BL       spi1
;;;293    temp=*(((char*)&ADR)+1);
00030c  f89d0001          LDRB     r0,[sp,#1]
;;;294    spi1(temp);
000310  f7fffffe          BL       spi1
;;;295    temp=*((char*)&ADR);
000314  f89d0000          LDRB     r0,[sp,#0]
;;;296    spi1(temp);
000318  f7fffffe          BL       spi1
;;;297    temp=*((char*)&in);
00031c  f89d0004          LDRB     r0,[sp,#4]
;;;298    spi1(temp);
000320  f7fffffe          BL       spi1
;;;299    temp=*(((char*)&in)+1);
000324  f89d3005          LDRB     r3,[sp,#5]
;;;300    spi1(temp);
000328  4618              MOV      r0,r3
00032a  f7fffffe          BL       spi1
;;;301    CS_OFF
00032e  6810              LDR      r0,[r2,#0]
000330  f4401080          ORR      r0,r0,#0x100000
000334  6010              STR      r0,[r2,#0]
000336  6990              LDR      r0,[r2,#0x18]
000338  f4401080          ORR      r0,r0,#0x100000
00033c  6190              STR      r0,[r2,#0x18]
;;;302    CS_OFF
00033e  6810              LDR      r0,[r2,#0]
000340  f4401080          ORR      r0,r0,#0x100000
000344  6010              STR      r0,[r2,#0]
000346  6990              LDR      r0,[r2,#0x18]
000348  f4401080          ORR      r0,r0,#0x100000
00034c  6190              STR      r0,[r2,#0x18]
;;;303    spi1_unconfig();
00034e  f7fffffe          BL       spi1_unconfig
;;;304    return temp;
000352  4618              MOV      r0,r3
;;;305    }  
000354  bd0c              POP      {r2,r3,pc}
;;;306    
                          ENDP

000356  0000              DCW      0x0000
                  |L1.856|
                          DCD      0x40020000
                  |L1.860|
                          DCD      0x4002c000
                  |L1.864|
                          DCD      0x2009c000

                          AREA ||area_number.2||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.2||, ||.text||
                  spi1_config_mcp2515 PROC
;;;308    //Запись 4 байт in по адресу ADR
;;;309    char lc640_write_long(int ADR,long in)
000000  480c              LDR      r0,|L2.52|
;;;310    {
;;;311    char temp; 
;;;312    
;;;313    while(lc640_rdsr()&0x01)
000002  6801              LDR      r1,[r0,#0]
000004  f0414140          ORR      r1,r1,#0xc0000000
000008  6001              STR      r1,[r0,#0]
;;;314    	{
;;;315    	}
;;;316    lc640_wren();	
00000a  6841              LDR      r1,[r0,#4]
00000c  f0210103          BIC      r1,r1,#3
;;;317    spi1_config();
000010  6041              STR      r1,[r0,#4]
;;;318    CS_ON
000012  6841              LDR      r1,[r0,#4]
000014  f041010c          ORR      r1,r1,#0xc
000018  6041              STR      r1,[r0,#4]
00001a  6841              LDR      r1,[r0,#4]
00001c  f0410130          ORR      r1,r1,#0x30
000020  6041              STR      r1,[r0,#4]
000022  4805              LDR      r0,|L2.56|
;;;319    spi1(0x02);
000024  f04f0120          MOV      r1,#0x20
000028  60c1              STR      r1,[r0,#0xc]
00002a  f04f0138          MOV      r1,#0x38
;;;320    temp=*(((char*)&ADR)+1);
00002e  6001              STR      r1,[r0,#0]
;;;321    spi1(temp);
000030  4770              BX       lr
;;;322    temp=*((char*)&ADR);
;;;323    spi1(temp);
;;;324    temp=*((char*)&in);
;;;325    spi1(temp);
;;;326    temp=*(((char*)&in)+1);
;;;327    spi1(temp);
;;;328    temp=*(((char*)&in)+2);
;;;329    spi1(temp);
;;;330    temp=*(((char*)&in)+3);
;;;331    spi1(temp);           
;;;332    CS_OFF
;;;333    CS_OFF  
;;;334    spi1_unconfig();
;;;335    return temp;
;;;336    }
;;;337    
                          ENDP

000032  0000              DCW      0x0000
                  |L2.52|
                          DCD      0x4002c000
                  |L2.56|
                          DCD      0x40020000

                          AREA ||area_number.3||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.3||, ||.text||
                  lc640_read PROC
;;;308    //Запись 4 байт in по адресу ADR
;;;309    char lc640_write_long(int ADR,long in)
000000  b501              PUSH     {r0,lr}
                  |L3.2|
;;;310    {
;;;311    char temp; 
;;;312    
;;;313    while(lc640_rdsr()&0x01)
000002  f7fffffe          BL       lc640_rdsr
000006  07c0              LSLS     r0,r0,#31
000008  d1fb              BNE      |L3.2|
;;;314    	{
;;;315    	}
;;;316    lc640_wren();	
00000a  f7fffffe          BL       spi1_config
;;;317    spi1_config();
00000e  4a1a              LDR      r2,|L3.120|
000010  6810              LDR      r0,[r2,#0]
;;;318    CS_ON
000012  f4401080          ORR      r0,r0,#0x100000
000016  6010              STR      r0,[r2,#0]
000018  69d0              LDR      r0,[r2,#0x1c]
00001a  f4401080          ORR      r0,r0,#0x100000
00001e  61d0              STR      r0,[r2,#0x1c]
000020  6810              LDR      r0,[r2,#0]
000022  f4401080          ORR      r0,r0,#0x100000
;;;319    spi1(0x02);
000026  6010              STR      r0,[r2,#0]
000028  69d0              LDR      r0,[r2,#0x1c]
00002a  f4401080          ORR      r0,r0,#0x100000
;;;320    temp=*(((char*)&ADR)+1);
00002e  61d0              STR      r0,[r2,#0x1c]
;;;321    spi1(temp);
000030  f04f0003          MOV      r0,#3
;;;322    temp=*((char*)&ADR);
000034  f7fffffe          BL       spi1
;;;323    spi1(temp);
000038  f89d0001          LDRB     r0,[sp,#1]
;;;324    temp=*((char*)&in);
00003c  f7fffffe          BL       spi1
;;;325    spi1(temp);
000040  f89d0000          LDRB     r0,[sp,#0]
;;;326    temp=*(((char*)&in)+1);
000044  f7fffffe          BL       spi1
;;;327    spi1(temp);
000048  20ff              MOVS     r0,#0xff
00004a  f7fffffe          BL       spi1
;;;328    temp=*(((char*)&in)+2);
00004e  4603              MOV      r3,r0
;;;329    spi1(temp);
000050  6810              LDR      r0,[r2,#0]
000052  f4401080          ORR      r0,r0,#0x100000
;;;330    temp=*(((char*)&in)+3);
000056  6010              STR      r0,[r2,#0]
;;;331    spi1(temp);           
000058  6990              LDR      r0,[r2,#0x18]
00005a  f4401080          ORR      r0,r0,#0x100000
;;;332    CS_OFF
00005e  6190              STR      r0,[r2,#0x18]
000060  6810              LDR      r0,[r2,#0]
000062  f4401080          ORR      r0,r0,#0x100000
000066  6010              STR      r0,[r2,#0]
000068  6990              LDR      r0,[r2,#0x18]
00006a  f4401080          ORR      r0,r0,#0x100000
;;;333    CS_OFF  
00006e  6190              STR      r0,[r2,#0x18]
000070  f7fffffe          BL       spi1_unconfig
000074  4618              MOV      r0,r3
000076  bd08              POP      {r3,pc}
;;;334    spi1_unconfig();
;;;335    return temp;
;;;336    }
;;;337    
                          ENDP

                  |L3.120|
                          DCD      0x2009c000

                          AREA ||area_number.4||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.4||, ||.text||
                  lc640_read_str PROC
;;;308    //Запись 4 байт in по адресу ADR
;;;309    char lc640_write_long(int ADR,long in)
000000  b577              PUSH     {r0-r2,r4-r6,lr}
;;;310    {
;;;311    char temp; 
;;;312    
;;;313    while(lc640_rdsr()&0x01)
000002  460c              MOV      r4,r1
000004  4616              MOV      r6,r2
                  |L4.6|
000006  f7fffffe          BL       lc640_rdsr
;;;314    	{
;;;315    	}
;;;316    lc640_wren();	
00000a  07c0              LSLS     r0,r0,#31
00000c  d1fb              BNE      |L4.6|
;;;317    spi1_config();
00000e  f7fffffe          BL       spi1_config
;;;318    CS_ON
000012  4d1b              LDR      r5,|L4.128|
000014  6828              LDR      r0,[r5,#0]
000016  f4401080          ORR      r0,r0,#0x100000
00001a  6028              STR      r0,[r5,#0]
00001c  69e8              LDR      r0,[r5,#0x1c]
00001e  f4401080          ORR      r0,r0,#0x100000
000022  61e8              STR      r0,[r5,#0x1c]
;;;319    spi1(0x02);
000024  f04f0003          MOV      r0,#3
000028  f7fffffe          BL       spi1
;;;320    temp=*(((char*)&ADR)+1);
00002c  f89d0001          LDRB     r0,[sp,#1]
;;;321    spi1(temp);
000030  f7fffffe          BL       spi1
;;;322    temp=*((char*)&ADR);
000034  f89d0000          LDRB     r0,[sp,#0]
;;;323    spi1(temp);
000038  f7fffffe          BL       spi1
;;;324    temp=*((char*)&in);
00003c  f04f0300          MOV      r3,#0
;;;325    spi1(temp);
000040  e007              B        |L4.82|
                  |L4.66|
000042  20ff              MOVS     r0,#0xff
;;;326    temp=*(((char*)&in)+1);
000044  f7fffffe          BL       spi1
;;;327    spi1(temp);
000048  f8040b01          STRB     r0,[r4],#1
;;;328    temp=*(((char*)&in)+2);
00004c  f1030301          ADD      r3,r3,#1
;;;329    spi1(temp);
000050  b2db              UXTB     r3,r3
                  |L4.82|
000052  42b3              CMP      r3,r6
;;;330    temp=*(((char*)&in)+3);
000054  d3f5              BCC      |L4.66|
000056  6828              LDR      r0,[r5,#0]
;;;331    spi1(temp);           
000058  f4401080          ORR      r0,r0,#0x100000
00005c  6028              STR      r0,[r5,#0]
;;;332    CS_OFF
00005e  69a8              LDR      r0,[r5,#0x18]
000060  f4401080          ORR      r0,r0,#0x100000
000064  61a8              STR      r0,[r5,#0x18]
000066  6828              LDR      r0,[r5,#0]
000068  f4401080          ORR      r0,r0,#0x100000
00006c  6028              STR      r0,[r5,#0]
;;;333    CS_OFF  
00006e  69a8              LDR      r0,[r5,#0x18]
000070  f4401080          ORR      r0,r0,#0x100000
000074  61a8              STR      r0,[r5,#0x18]
000076  e8bd407e          POP      {r1-r6,lr}
00007a  f7ffbffe          B.W      spi1_unconfig
;;;334    spi1_unconfig();
;;;335    return temp;
;;;336    }
;;;337    
                          ENDP

00007e  0000              DCW      0x0000
                  |L4.128|
                          DCD      0x2009c000

                          AREA ||area_number.5||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.5||, ||.text||
                  lc640_write_long PROC
;;;308    //Запись 4 байт in по адресу ADR
;;;309    char lc640_write_long(int ADR,long in)
000000  b503              PUSH     {r0,r1,lr}
                  |L5.2|
;;;310    {
;;;311    char temp; 
;;;312    
;;;313    while(lc640_rdsr()&0x01)
000002  f7fffffe          BL       lc640_rdsr
000006  07c0              LSLS     r0,r0,#31
000008  d1fb              BNE      |L5.2|
;;;314    	{
;;;315    	}
;;;316    lc640_wren();	
00000a  f7fffffe          BL       lc640_wren
;;;317    spi1_config();
00000e  f7fffffe          BL       spi1_config
;;;318    CS_ON
000012  4a1d              LDR      r2,|L5.136|
000014  6810              LDR      r0,[r2,#0]
000016  f4401080          ORR      r0,r0,#0x100000
00001a  6010              STR      r0,[r2,#0]
00001c  69d0              LDR      r0,[r2,#0x1c]
00001e  f4401080          ORR      r0,r0,#0x100000
000022  61d0              STR      r0,[r2,#0x1c]
;;;319    spi1(0x02);
000024  f04f0002          MOV      r0,#2
000028  f7fffffe          BL       spi1
;;;320    temp=*(((char*)&ADR)+1);
00002c  f89d0001          LDRB     r0,[sp,#1]
;;;321    spi1(temp);
000030  f7fffffe          BL       spi1
;;;322    temp=*((char*)&ADR);
000034  f89d0000          LDRB     r0,[sp,#0]
;;;323    spi1(temp);
000038  f7fffffe          BL       spi1
;;;324    temp=*((char*)&in);
00003c  f89d0004          LDRB     r0,[sp,#4]
;;;325    spi1(temp);
000040  f7fffffe          BL       spi1
;;;326    temp=*(((char*)&in)+1);
000044  f89d0005          LDRB     r0,[sp,#5]
;;;327    spi1(temp);
000048  f7fffffe          BL       spi1
;;;328    temp=*(((char*)&in)+2);
00004c  f89d0006          LDRB     r0,[sp,#6]
;;;329    spi1(temp);
000050  f7fffffe          BL       spi1
;;;330    temp=*(((char*)&in)+3);
000054  f89d3007          LDRB     r3,[sp,#7]
;;;331    spi1(temp);           
000058  4618              MOV      r0,r3
00005a  f7fffffe          BL       spi1
;;;332    CS_OFF
00005e  6810              LDR      r0,[r2,#0]
000060  f4401080          ORR      r0,r0,#0x100000
000064  6010              STR      r0,[r2,#0]
000066  6990              LDR      r0,[r2,#0x18]
000068  f4401080          ORR      r0,r0,#0x100000
00006c  6190              STR      r0,[r2,#0x18]
;;;333    CS_OFF  
00006e  6810              LDR      r0,[r2,#0]
000070  f4401080          ORR      r0,r0,#0x100000
000074  6010              STR      r0,[r2,#0]
000076  6990              LDR      r0,[r2,#0x18]
000078  f4401080          ORR      r0,r0,#0x100000
00007c  6190              STR      r0,[r2,#0x18]
;;;334    spi1_unconfig();
00007e  f7fffffe          BL       spi1_unconfig
;;;335    return temp;
000082  4618              MOV      r0,r3
;;;336    }
000084  bd0c              POP      {r2,r3,pc}
;;;337    
                          ENDP

000086  0000              DCW      0x0000
                  |L5.136|
                          DCD      0x2009c000

                          AREA ||area_number.6||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.6||, ||.text||
                  lc640_write_long_ptr PROC
;;;308    //Запись 4 байт in по адресу ADR
;;;309    char lc640_write_long(int ADR,long in)
000000  b513              PUSH     {r0,r1,r4,lr}
;;;310    {
;;;311    char temp; 
;;;312    
;;;313    while(lc640_rdsr()&0x01)
000002  460c              MOV      r4,r1
                  |L6.4|
000004  f7fffffe          BL       lc640_rdsr
000008  07c0              LSLS     r0,r0,#31
;;;314    	{
;;;315    	}
;;;316    lc640_wren();	
00000a  d1fb              BNE      |L6.4|
00000c  f7fffffe          BL       lc640_wren
;;;317    spi1_config();
000010  f7fffffe          BL       spi1_config
;;;318    CS_ON
000014  4a1a              LDR      r2,|L6.128|
000016  6810              LDR      r0,[r2,#0]
000018  f4401080          ORR      r0,r0,#0x100000
00001c  6010              STR      r0,[r2,#0]
00001e  69d0              LDR      r0,[r2,#0x1c]
000020  f4401080          ORR      r0,r0,#0x100000
;;;319    spi1(0x02);
000024  61d0              STR      r0,[r2,#0x1c]
000026  f04f0002          MOV      r0,#2
00002a  f7fffffe          BL       spi1
;;;320    temp=*(((char*)&ADR)+1);
00002e  f89d0001          LDRB     r0,[sp,#1]
;;;321    spi1(temp);
000032  f7fffffe          BL       spi1
;;;322    temp=*((char*)&ADR);
000036  f89d0000          LDRB     r0,[sp,#0]
;;;323    spi1(temp);
00003a  f7fffffe          BL       spi1
;;;324    temp=*((char*)&in);
00003e  7820              LDRB     r0,[r4,#0]
;;;325    spi1(temp);
000040  f7fffffe          BL       spi1
;;;326    temp=*(((char*)&in)+1);
000044  7860              LDRB     r0,[r4,#1]
000046  f7fffffe          BL       spi1
;;;327    spi1(temp);
00004a  78a0              LDRB     r0,[r4,#2]
;;;328    temp=*(((char*)&in)+2);
00004c  f7fffffe          BL       spi1
;;;329    spi1(temp);
000050  78e3              LDRB     r3,[r4,#3]
000052  4618              MOV      r0,r3
;;;330    temp=*(((char*)&in)+3);
000054  f7fffffe          BL       spi1
;;;331    spi1(temp);           
000058  6810              LDR      r0,[r2,#0]
00005a  f4401080          ORR      r0,r0,#0x100000
;;;332    CS_OFF
00005e  6010              STR      r0,[r2,#0]
000060  6990              LDR      r0,[r2,#0x18]
000062  f4401080          ORR      r0,r0,#0x100000
000066  6190              STR      r0,[r2,#0x18]
000068  6810              LDR      r0,[r2,#0]
00006a  f4401080          ORR      r0,r0,#0x100000
;;;333    CS_OFF  
00006e  6010              STR      r0,[r2,#0]
000070  6990              LDR      r0,[r2,#0x18]
000072  f4401080          ORR      r0,r0,#0x100000
000076  6190              STR      r0,[r2,#0x18]
000078  f7fffffe          BL       spi1_unconfig
00007c  4618              MOV      r0,r3
;;;334    spi1_unconfig();
00007e  bd1c              POP      {r2-r4,pc}
;;;335    return temp;
;;;336    }
;;;337    
                          ENDP

                  |L6.128|
                          DCD      0x2009c000
