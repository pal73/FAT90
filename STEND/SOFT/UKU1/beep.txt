; generated by ARM C/C++ Compiler, 4.1 [Build 644]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\EXE\beep.o --asm_dir=.\ --list_dir=.\ --depend=.\EXE\beep.d --feedback=.\EXE\STEND.fed --cpu=Cortex-M3 --apcs=interwork -O1 -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\INC\NXP\LPC17xx -D__MICROLIB -DUKU_VD -DUKU_220_IPS_TERMOKOMPENSAT -DUKU2071x --omf_browse=.\EXE\beep.crf beep.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  beep_drv PROC
;;;12     //-----------------------------------------------
;;;13     void beep_drv(void)
000000  4926              LDR      r1,|L1.156|
;;;14     {
;;;15     LPC_GPIO1->FIODIR|=(1UL<<31);
000002  6a08              LDR      r0,[r1,#0x20]
000004  f0404000          ORR      r0,r0,#0x80000000
000008  6208              STR      r0,[r1,#0x20]
;;;16     if((beep_stat_temp&0x00000001UL)&&(ZV_ON))
00000a  4a25              LDR      r2,|L1.160|
00000c  6850              LDR      r0,[r2,#4]  ; beep_stat_temp
00000e  07c3              LSLS     r3,r0,#31
000010  d00a              BEQ      |L1.40|
000012  4b24              LDR      r3,|L1.164|
000014  881b              LDRH     r3,[r3,#0]  ; ZV_ON
000016  b13b              CBZ      r3,|L1.40|
;;;17         	{
;;;18         	LPC_GPIO1->FIOSET|=(1UL<<31);
000018  6b8b              LDR      r3,[r1,#0x38]
00001a  f0434300          ORR      r3,r3,#0x80000000
00001e  638b              STR      r3,[r1,#0x38]
;;;19         	beep_cnt=6;
000020  f04f0106          MOV      r1,#6
000024  7091              STRB     r1,[r2,#2]
000026  e003              B        |L1.48|
                  |L1.40|
;;;20         	}
;;;21     else LPC_GPIO1->FIOCLR|=(1UL<<31);
000028  6bcb              LDR      r3,[r1,#0x3c]
00002a  f0434300          ORR      r3,r3,#0x80000000
00002e  63cb              STR      r3,[r1,#0x3c]
                  |L1.48|
;;;22     
;;;23     beep_stat_temp>>=1;
000030  ea4f0050          LSR      r0,r0,#1
000034  6050              STR      r0,[r2,#4]  ; beep_stat_temp
;;;24     if(--beep_stat_cnt==0)
000036  7850              LDRB     r0,[r2,#1]  ; beep_stat_cnt
000038  f1a00001          SUB      r0,r0,#1
00003c  f01000ff          ANDS     r0,r0,#0xff
000040  7050              STRB     r0,[r2,#1]
000042  d104              BNE      |L1.78|
;;;25     	{
;;;26     	beep_stat_cnt=32;
000044  f04f0020          MOV      r0,#0x20
000048  7050              STRB     r0,[r2,#1]
;;;27     	beep_stat_temp=beep_stat;
00004a  6890              LDR      r0,[r2,#8]  ; beep_stat
00004c  6050              STR      r0,[r2,#4]  ; beep_stat_temp
                  |L1.78|
;;;28     	}
;;;29     
;;;30     //IO1SET|=(1UL<<27);
;;;31     //FIO1SET|=(1UL<<27);
;;;32     }
00004e  4770              BX       lr
;;;33     
                          ENDP

                  beep_init PROC
;;;34     //-----------------------------------------------
;;;35     void beep_init(long zvuk,char fl) 
000050  b510              PUSH     {r4,lr}
;;;36     {
;;;37     if(fl=='O')
;;;38     	{
;;;39     	beep_stat_temp=zvuk;
000052  4a13              LDR      r2,|L1.160|
;;;40     	beep_stat=0x0L;
000054  2400              MOVS     r4,#0
;;;41     	beep_stat_cnt=32;
000056  2320              MOVS     r3,#0x20
000058  294f              CMP      r1,#0x4f              ;37
00005a  d009              BEQ      |L1.112|
;;;42     	} 
;;;43     else if(fl=='A')
00005c  2941              CMP      r1,#0x41
00005e  d00b              BEQ      |L1.120|
;;;44     	{
;;;45     	beep_stat_temp=zvuk;
;;;46     	beep_stat=zvuk;
;;;47     	beep_stat_cnt=32;
;;;48     	}	 
;;;49     
;;;50     else if(fl=='R')
000060  2952              CMP      r1,#0x52
000062  d00d              BEQ      |L1.128|
;;;51     	{
;;;52     	beep_stat=zvuk;
;;;53     	}	
;;;54     		          
;;;55     else if(fl=='S')
000064  2953              CMP      r1,#0x53
000066  d102              BNE      |L1.110|
;;;56     	{
;;;57     	beep_stat_temp=0x0L;
000068  6054              STR      r4,[r2,#4]  ; beep_stat_temp
;;;58     	beep_stat=0x0L;
00006a  6094              STR      r4,[r2,#8]  ; beep_stat
;;;59     	beep_stat_cnt=32;
00006c  7053              STRB     r3,[r2,#1]
                  |L1.110|
;;;60     	}	
;;;61     }
00006e  bd10              POP      {r4,pc}
                  |L1.112|
000070  6050              STR      r0,[r2,#4]            ;39  ; beep_stat_temp
000072  6094              STR      r4,[r2,#8]            ;40  ; beep_stat
000074  7053              STRB     r3,[r2,#1]            ;41
000076  bd10              POP      {r4,pc}
                  |L1.120|
000078  6050              STR      r0,[r2,#4]            ;45  ; beep_stat_temp
00007a  6090              STR      r0,[r2,#8]            ;46  ; beep_stat
00007c  7053              STRB     r3,[r2,#1]            ;47
00007e  bd10              POP      {r4,pc}
                  |L1.128|
000080  6090              STR      r0,[r2,#8]            ;52  ; beep_stat
000082  bd10              POP      {r4,pc}
;;;62     
                          ENDP

                  beep_hndl PROC
;;;63     //-----------------------------------------------
;;;64     void beep_hndl(void) 
000084  4906              LDR      r1,|L1.160|
;;;65     { 
;;;66     static char bcnt;
;;;67     bcnt++; 
000086  7808              LDRB     r0,[r1,#0]  ; bcnt
000088  f1000001          ADD      r0,r0,#1
00008c  b2c0              UXTB     r0,r0
00008e  7008              STRB     r0,[r1,#0]
;;;68     if(bcnt>9)bcnt=0;
000090  2809              CMP      r0,#9
000092  d902              BLS      |L1.154|
000094  f04f0000          MOV      r0,#0
000098  7008              STRB     r0,[r1,#0]
                  |L1.154|
;;;69     //bU_BAT2REL_AV_BAT=0;
;;;70     /*
;;;71     if((avar_ind_stat)||(ips_bat_av_stat))beep_init(0x33333333,'R');
;;;72     
;;;73     
;;;74     else if ( (((bat[0]._Ub<(USIGN*10))&&(BAT_IS_ON[0]==bisON))||((bat[1]._Ub<(USIGN*10))&&(BAT_IS_ON[1]==bisON)))) 
;;;75     	{
;;;76     	if(!bSILENT)
;;;77     		{
;;;78     		beep_init(0x01010101,'R');
;;;79     		mess_send(MESS2RELE_HNDL,PARAM_RELE_BAT_IS_DISCHARGED,1,5);
;;;80     		}
;;;81     
;;;82     	//bU_BAT2REL_AV_BAT=1;
;;;83     	}
;;;84     
;;;85     else if ( (((bat[0]._Ib<(-IKB))&&(BAT_IS_ON[0]==bisON))||((bat[1]._Ib<(-IKB))&&(BAT_IS_ON[1]==bisON)))) 
;;;86     	{
;;;87     	if(!bSILENT)beep_init(0x00010001,'R');
;;;88     	//bU_BAT2REL_AV_BAT=1;
;;;89     	}
;;;90     
;;;91     else if ( ((bat[0]._temper_stat&0x03)||(bat[1]._temper_stat&0x03)) )
;;;92     	{
;;;93     	if(!bSILENT) beep_init(0x00000005,'R');
;;;94     	}
;;;95     
;;;96     
;;;97     else 
;;;98     	{
;;;99     	beep_init(0x00000000,'S');
;;;100    	bSILENT=0;
;;;101    	}  */
;;;102    
;;;103    
;;;104    //if(!avar_ind_stat)beep_init(0x00000000,'R');
;;;105    
;;;106    /*if(K[MNL]==ON)
;;;107    	{ */
;;;108    //if(((av_beep&0xffff)&&(ind!=iK)&&(ind!=iTst))
;;;109    //	/*||((!T_EXT_ZVUK_EN[0])&&((tout_stat[0]==tMIN)||(tout_stat[0]==tMAX)))*/)beep_init(0x55555555,'R'); 
;;;110    
;;;111    //else if(bUrazr&&(!bUOFF))beep_init(0x00010001,'R');
;;;112    
;;;113    //else if(bIrazr&&(cnt_beep==0))beep_init(0x01010101,'R');
;;;114    
;;;115    /*
;;;116    else if(bTsi||bTsb)
;;;117    	{
;;;118    	if(!bcnt)beep_init(0x00000001,'O');
;;;119         }
;;;120    
;;;121    else if(bIbr) beep_init(0x00000001,'R');
;;;122    */
;;;123    
;;;124    
;;;125    //else beep_init(0x00000000,'S');
;;;126    
;;;127    
;;;128    
;;;129    
;;;130    
;;;131    }
00009a  4770              BX       lr
                          ENDP

                  |L1.156|
                          DCD      0x2009c000
                  |L1.160|
                          DCD      ||.data||
                  |L1.164|
                          DCD      ZV_ON

                          AREA ||.data||, DATA, ALIGN=2

                  bcnt
000000  00                DCB      0x00
                  beep_stat_cnt
000001  00                DCB      0x00
                  beep_cnt
000002  0000              DCB      0x00,0x00
                  beep_stat_temp
                          DCD      0x00000000
                  beep_stat
                          DCD      0x00000000

                          AREA ||area_number.5||, DATA, ALIGN=0

                          EXPORTAS ||area_number.5||, ||.data||
                  bU_BAT2REL_AV_BAT
000000  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "beep.c"
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___6_beep_c_beep_drv____REV16|
#line 112 "C:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___6_beep_c_beep_drv____REV16| PROC
#line 113

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___6_beep_c_beep_drv____REVSH|
#line 130
|__asm___6_beep_c_beep_drv____REVSH| PROC
#line 131

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
